(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{716:function(t,n,e){"use strict";e.r(n);var s=e(68),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"output与-input理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output与-input理解"}},[t._v("#")]),t._v(" @Output与@Input理解")]),t._v(" "),e("p",[t._v("Output和Input是两个装饰器，是Angular2专门用来实现跨组件通讯，双向绑定等操作所用的。")]),t._v(" "),e("h2",{attrs:{id:"input"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input"}},[t._v("#")]),t._v(" @Input")]),t._v(" "),e("p",[t._v("Component本身是一种支持 nest 的结构，Child和Parent之间，如果Parent需要把数据传输给child并在child自己的页面中显示，则需要在Child的对应 directive 标示为 input。")]),t._v(" "),e("p",[t._v("例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("@Input() name: string;\n")])])]),e("p",[t._v("我们通过一个例子来分析下"),e("code",[t._v("@Input")]),t._v("的流程。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://ws1.sinaimg.cn/large/806e3151ly1fxtu0ia0t7j216m0pgjwe.jpg",alt:""}})]),t._v(" "),e("p",[t._v("流程：")]),t._v(" "),e("ol",[e("li",[t._v("child_component.ts内有students，并且是被@Input标记的，那么这个属性就作为输入属性")]),t._v(" "),e("li",[t._v("在parent_component.html内直接使用了students，那是因为在parent.module.ts内将child组件import进来了")]),t._v(" "),e("li",[t._v("[students]这种形式叫属性绑定，绑定的值为school.schoolStudents属性")]),t._v(" "),e("li",[t._v("Angular会把schoolStudents的值赋值给students，然后影响到子组件的显示")])]),t._v(" "),e("p",[t._v("所以我们可以总结，child_component中有数据要显示，但是这个数据的来源是通过parent_component.html中通过属性绑定的形式作为child组件的输入，要想child组件内的students属性能够成功赋值，那么必须使用@Input。")]),t._v(" "),e("p",[e("code",[t._v("@Input")]),t._v("还可以使用typescript的get set存取器的方式来设置属性")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("private _name: string;\n\n@Input get name() {return this._name;}\nset(name:string) {this._name = name;}\n")])])]),e("h2",{attrs:{id:"output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[t._v("#")]),t._v(" @Output")]),t._v(" "),e("p",[t._v("Output的数据流方向与input是相反的，所以那就是child控制parent的数据显示，input是parent控制child的数据显示。")]),t._v(" "),e("p",[e("strong",[t._v("注意")]),t._v("\nAngular 2中，@Output的实现必须使用EventEmitter来实现。\n并且当你使用了tslint之后，变量不能加on，但是可以通过加入这样一段注释")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// tslint:disable-next-line:no-output-on-prefix\n@Output() onRemoveElement = new EventEmitter<Element>();\n")])])]),e("p",[t._v("形如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 要将EventEmitter先import进来。\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n...\n@Output() mySignal = new EventEmitter<boolean>();\n")])])]),e("p",[t._v("EventEmitter();中间的boolean参数是你需要传递数据的类型，当然可以是基本类型，也可以是自定义类型。")]),t._v(" "),e("p",[t._v("我们还是老样子，通过一个例子来分析一下吧。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://ws1.sinaimg.cn/large/806e3151ly1fxtu7s2pydj218a0ueq92.jpg",alt:""}})]),t._v(" "),e("p",[t._v("我们通过这张图可以看到，整个事件的流程，那我们来分析一下：")]),t._v(" "),e("p",[t._v("child组件内有一个Output customClick的事件，事件的数据类型是number\nchild组件内有一个onClicked方法，这个是应用在html中button控件的click事件中，通过(click)=”onClicked()”进行方法绑定\nparent组件内有一个public的属性showMsg,Angular的ts类默认不写关键字就是public。")]),t._v(" "),e("p",[t._v("parent组件内有一个onCustomClicked方法，这个也是要用在html中的，是和child组件内的output标记的customClick事件进行绑定的\n步骤为child的html的button按钮被点击->onClicked方法被调用->emit(99)触发customClick->Angular通过Output数据流识别出发生变化并通知parent的html中(customClick)->onCustomClicked(event)被调用，event)被调用，event为数据99->改变了showMsg属性值->影响到了parent的html中的显示由1变为99。")]),t._v(" "),e("p",[e("strong",[t._v("小知识：")])]),t._v(" "),e("p",[t._v("其实双向绑定就是这么实现的，只是将input和output一起使用即可达到目的。")])])}),[],!1,null,null,null);n.default=a.exports}}]);