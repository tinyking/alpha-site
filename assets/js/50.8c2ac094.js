(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{695:function(e,t,a){"use strict";a.r(t);var r=a(68),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[e._v("#")]),e._v(" 问题")]),e._v(" "),a("p",[e._v("XX系统中，一个用户需要维护的项目数过多，填写的任务数超多，产生了一次工时保存中，只有前面一部分的xx数据持久化到数据库，后面的数据没有保存。")]),e._v(" "),a("p",[a("code",[e._v("图1")])]),e._v(" "),a("p",[a("img",{attrs:{src:"http://ww1.sinaimg.cn/large/806e3151ly1fptj4uwnnuj21200i8gm5.jpg",alt:""}})]),e._v(" "),a("h1",{attrs:{id:"排查过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排查过程"}},[e._v("#")]),e._v(" 排查过程")]),e._v(" "),a("h2",{attrs:{id:"_1-增加日志，监控参数信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-增加日志，监控参数信息"}},[e._v("#")]),e._v(" 1.增加日志，监控参数信息")]),e._v(" "),a("p",[e._v("首先想到的是否后面部分的数据在保存过程中发生了异常。排查异常日志，发现没有该问题存在。")]),e._v(" "),a("p",[e._v("然后增加方法参数信息日志，数据参数信息。发现参数集合size=200，前端发送集合size=400。判断问题可以能是因为服务器容器环境(Nginx+Tomcat)导致")]),e._v(" "),a("h2",{attrs:{id:"_2-开发环境问题重现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-开发环境问题重现"}},[e._v("#")]),e._v(" 2.开发环境问题重现")]),e._v(" "),a("h3",{attrs:{id:"_2-1-模拟数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-模拟数据"}},[e._v("#")]),e._v(" 2.1 模拟数据")]),e._v(" "),a("p",[e._v("在测试环境模拟线上数据。如"),a("code",[e._v("图1")])]),e._v(" "),a("h3",{attrs:{id:"_2-2-只配置tomcat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-只配置tomcat"}},[e._v("#")]),e._v(" 2.2 只配置Tomcat")]),e._v(" "),a("p",[e._v("在idea中直接启动tomcat，无nginx环境，如果没有问题，则可暂时确定为nginx问题。")]),e._v(" "),a("p",[e._v("然而，在过程中发现了新的问题。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("org.springframework.beans.InvalidPropertyException: Invalid property 'detail[256]' of bean class [com.suning.asvp.mer.entity.InviteCooperationInfo]: Index of out of bounds in property path 'detail[256]'; nested exception is java.lang.IndexOutOfBoundsException: Index: 256, Size: 256  \n    at org.springframework.beans.BeanWrapperImpl.getPropertyValue(BeanWrapperImpl.java:833) ~[spring-beans-3.1.2.RELEASE.jar:3.1.2.RELEASE]  \n    at org.springframework.beans.BeanWrapperImpl.getNestedBeanWrapper(BeanWrapperImpl.java:576) ~[spring-beans-3.1.2.RELEASE.jar:3.1.2.RELEASE]  \n    at org.springframework.beans.BeanWrapperImpl.getBeanWrapperForPropertyPath(BeanWrapperImpl.java:553) ~[spring-beans-3.1.2.RELEASE.jar:3.1.2.RELEASE]  \n    at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:914) ~[spring-beans-3.1.2.RELEASE.jar:3.1.2.RELEASE]  \n    at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:76) ~[spring-beans-3.1.2.RELEASE.jar:3.1.2.RELEASE]  \n    at org.springframework.validation.DataBinder.applyPropertyValues(DataBinder.java:692) ~[spring-context-3.1.2.RELEASE.jar:3.1.2.RELEASE]  \n    at org.springframework.validation.DataBinder.doBind(DataBinder.java:588) ~[spring-context-3.1.2.RELEASE.jar:3.1.2.RELEASE]  \n    at org.springframework.web.bind.WebDataBinder.doBind(WebDataBinder.java:191) ~[spring-web-3.1.2.RELEASE.jar:3.1.2.RELEASE]  \n    at org.springframework.web.bind.ServletRequestDataBinder.bind(ServletRequestDataBinder.java:112) ~[spring-web-3.1.2.RELEASE.jar:3.1.2.RELEASE] \n")])])]),a("p",[e._v("查看BeanWrapperImpl源码")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("else if (value instanceof List) {  \n    int index = Integer.parseInt(key);                        \n    List list = (List) value;  \n    growCollectionIfNecessary(list, index, indexedPropertyName, pd, i + 1);                       \n    value = list.get(index);// 测试报错时，此处list只有256个，index为256时，取第257个报错  \n}  \n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@SuppressWarnings("unchecked")  \n    private void growCollectionIfNecessary(  \n            Collection collection, int index, String name, PropertyDescriptor pd, int nestingLevel) {  \n  \n  \n        if (!this.autoGrowNestedPaths) {  \n            return;  \n        }  \n        int size = collection.size();  \n        // 当个数小于autoGrowCollectionLimit这个值时才会向list中添加新元素  \n        if (index >= size && index < this.autoGrowCollectionLimit) {  \n            Class elementType = GenericCollectionTypeResolver.getCollectionReturnType(pd.getReadMethod(), nestingLevel);  \n            if (elementType != null) {  \n                for (int i = collection.size(); i < index + 1; i++) {  \n                    collection.add(newValue(elementType, name));  \n                }  \n            }  \n        }  \n    }  \n')])])]),a("p",[e._v("根据上面的分析找到autoGrowCollectionLimit的定义")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('public class DataBinder implements PropertyEditorRegistry, TypeConverter {  \n  \n    /** Default object name used for binding: "target" */  \n    public static final String DEFAULT_OBJECT_NAME = "target";  \n  \n    /** Default limit for array and collection growing: 256 */  \n    public static final int DEFAULT_AUTO_GROW_COLLECTION_LIMIT = 256;  \n  \n    private int autoGrowCollectionLimit = DEFAULT_AUTO_GROW_COLLECTION_LIMIT; \n')])])]),a("p",[e._v("解决方案，是在自己的Controller中加入如下方法")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("@InitBinder  \nprotected void initBinder(WebDataBinder binder) {  \n    binder.setAutoGrowNestedPaths(true);  \n    binder.setAutoGrowCollectionLimit(1024);  \n}  \n")])])]),a("p",[e._v("=="),a("strong",[e._v("BUT")]),e._v(" 这个问题和线上的不同，只能算是意外收获。革命尚未成功，同志仍需努力！！！！==")]),e._v(" "),a("h3",{attrs:{id:"_2-3-增加nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-增加nginx"}},[e._v("#")]),e._v(" 2.3 增加Nginx")]),e._v(" "),a("p",[e._v("经过2.2的奋斗，暂时判定是否为Nginx post请求参数做了限制。嗯，开搞~ 在开发环境配置Nginx代理，过程略·····")]),e._v(" "),a("p",[e._v("nginx.conf 如下")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("upstream xxxxxxx {\n\tserver 127.0.0.1:8080  weight=10 max_fails=2 fail_timeout=30s ;\n}\n\nserver {\n    listen       80;\n    server_name  xxxxxxx.com;\n    client_max_body_size 100M;  # 配置post size\n    \n    #charset koi8-r;\n  \n    #access_log  logs/host.access.log  main;\n\t\n   location / {\n\t\t#proxy_next_upstream     http_500 http_502 http_503 http_504 error timeout invalid_header;\n\t\tproxy_set_header        Host  $host;\n\t\tproxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\tproxy_pass              http://xxxxxxx;\n\t\texpires                 0;\n\t}\n}\n")])])]),a("p",[e._v("对于"),a("code",[e._v("client_max_body_size 100M;")]),e._v("，网上都是与文件上传相关的。不过都是通过post， request body的方式上传数据，所以通用。")]),e._v(" "),a("p",[e._v("测试~~")]),e._v(" "),a("p",[e._v("功能正常，没有重现线上问题。 哭死~~~")]),e._v(" "),a("p",[e._v("革命还要继续~~")]),e._v(" "),a("h3",{attrs:{id:"_2-4-tomcat-post设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-tomcat-post设置"}},[e._v("#")]),e._v(" 2.4 Tomcat post设置")]),e._v(" "),a("p",[e._v("去线上服务器拉去配置")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<Connector port="1601" maxParameterCount="1000" protocol="HTTP/1.1" redirectPort="8443" maxSpareThreads="750" maxThreads="1000" minSpareTHreads="50" acceptCount="1000" connectionTimeout="20000" URIEncoding="utf-8"/>\n')])])]),a("p",[e._v("经分析，发现线上没有body size的配置，却有"),a("code",[e._v('maxParameterCount="1000"')]),e._v("。该参数为限制请求的参数个数，从而变相限制body size。")]),e._v(" "),a("p",[e._v("在开发环境配置该参数，测试，"),a("strong",[e._v("问题重现")]),e._v("。")]),e._v(" "),a("h2",{attrs:{id:"_3-解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-解决"}},[e._v("#")]),e._v(" 3. 解决")]),e._v(" "),a("p",[e._v("问题原因定位好了，剩下的就是如何解决了。")]),e._v(" "),a("p",[e._v("两个方案：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("修改线上配置")]),e._v(" "),a("p",[a("em",[e._v("该上实施难度系数高，因为公司使用的统一发布部署平台，开发人员无服务器操作权限。")])])]),e._v(" "),a("li",[a("p",[e._v("修改代码")]),e._v(" "),a("p",[a("em",[e._v("修改保存逻辑，分片存储")])])])]),e._v(" "),a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),a("p",[e._v("问题排查，需要先对整体有个把握，然后分析影响范围。不能钻牛角尖，采用西医“头疼医头”的方式。有可能最后结果还是要医头，但此时的医头已经是建立在中医的辩证主义上，对症下药。")])])}),[],!1,null,null,null);t.default=n.exports}}]);