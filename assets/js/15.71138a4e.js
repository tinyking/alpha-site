(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{727:function(t,e,n){"use strict";n.r(e);var p=n(68),_=Object(p.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("代理模式：代理类和被代理类实现共同的接口（或继承），代理类中存有被代理类的索引，实际执行时通过调用代理类的方法，实际执行的是被代理类的方法。")]),t._v(" "),n("p",[n("img",{attrs:{src:"http://img.hb.aicdn.com/29f71c9def992be7b94c3566c6a7fd03bdcb93df32f3-49dKXs_fw658",alt:""}})]),t._v(" "),n("p",[t._v("而AOP，是通过动态代理实现的。")]),t._v(" "),n("p",[t._v("一、简单来说：")]),t._v(" "),n("p",[t._v("JDK动态代理只能对实现了接口的类生成代理，而不能针对类")]),t._v(" "),n("p",[t._v("CGLIB是针对类实现代理，主要是对指定的类生成一个子类，覆盖其中的方法（继承）")]),t._v(" "),n("p",[t._v("二、Spring在选择用JDK还是CGLiB的依据：")]),t._v(" "),n("p",[t._v("(1)当Bean实现接口时，Spring就会用JDK的动态代理")]),t._v(" "),n("p",[t._v("(2)当Bean没有实现接口时，Spring使用CGlib是实现")]),t._v(" "),n("p",[t._v('(3)可以强制使用CGlib（在spring配置中加入<aop:aspectj-autoproxy proxy-target-class="true"/>）')]),t._v(" "),n("p",[t._v("三、CGlib比JDK快？")]),t._v(" "),n("p",[t._v("(1)使用CGLib实现动态代理，CGLib底层采用ASM字节码生成框架，使用字节码技术生成代理类，比使用Java反射效率要高。唯一需要注意的是，CGLib不能对声明为final的方法进行代理，因为CGLib原理是动态生成被代理类的子类。")]),t._v(" "),n("p",[t._v("(2)在对JDK动态代理与CGlib动态代理的代码实验中看，1W次执行下，JDK7及8的动态代理性能比CGlib要好20%左右。")]),t._v(" "),n("blockquote",[n("p",[t._v("作者：Big_Monkey\n原文地址: "),n("a",{attrs:{href:"https://www.cnblogs.com/bigmonkeys/p/7823268.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态代理：JDK动态代理和CGLIB代理的区别"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=_.exports}}]);